if [ "$6" == "True" ]
then
    python -m torch.distributed.launch --nproc_per_node=8 --nnodes=2 --node_rank=$NODE_RANK --master_addr="$MASTER_IP" --master_port=$MASTER_PORT main.py --suffix=Net"$1"Bz"$3"by16Lr"$2"SbnTpbtShare40-60-80 --enable_nasas --node_rank=$NODE_RANK --net_version="$1" --syncbn --temporal_nasas_only --lr="$2" --batch-size="$3" --dropout=0.0 --weight_decay=0.0 --weight_reg="$7" --epochs=90 --lr_steps 40 60 80 --dense_sample --num_dense_sample=16 --dense_sample_stride=2 --random_dense_sample_stride --dataset="$4" --training_size="$5" --root_log=/log/log --root_model=/log/checkpoint --root_path=/data --resume=/log/checkpoint/NAS_sptp_warmup__ls10.0_something_RGB_Dense3D121_avg_segment1_e50_droprate0.5_num_dense_sample32_dense_sample_stride1_dense_Netv1d3Bz4by8Lr0.005SbnStp30-40/ckpt.best.pth.tar --print-freq=50 --eval-freq=5 --workers=8 --warmup --philly-nccl-multi-node --break_resume --use_zip
else
    python -m torch.distributed.launch --nproc_per_node=8 --nnodes=2 --node_rank=$NODE_RANK --master_addr="$MASTER_IP" --master_port=$MASTER_PORT main.py --suffix=Net"$1"Bz"$3"by16Lr"$2"SbnTpbtShare40-60-80 --enable_nasas --node_rank=$NODE_RANK --net_version="$1" --syncbn --temporal_nasas_only --lr="$2" --batch-size="$3" --dropout=0.0 --weight_decay=0.0 --weight_reg="$7" --epochs=90 --lr_steps 40 60 80 --dense_sample --num_dense_sample=32 --dense_sample_stride=1 --dataset="$4" --training_size="$5" --root_log=/log/log --root_model=/log/checkpoint --root_path=/data --resume=/log/checkpoint/NAS_sptp_warmup__ls10.0_something_RGB_Dense3D121_avg_segment1_e50_droprate0.5_num_dense_sample32_dense_sample_stride1_dense_Netv1d3Bz4by8Lr0.005SbnStp30-40/ckpt.best.pth.tar --print-freq=50 --eval-freq=5 --workers=8 --warmup --philly-nccl-multi-node --break_resume --use_zip
fi